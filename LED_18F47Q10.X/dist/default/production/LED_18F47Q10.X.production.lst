

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Mar 22 00:55:48 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F47Q10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11  0000                     
    12                           ; Version 2.10
    13                           ; Generated 31/07/2019 GMT
    14                           ; 
    15                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC18F47Q10 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     _OSCCON1bits	set	3795
    47  0000                     _ANSELAbits	set	3852
    48  0000                     _PORTAbits	set	3980
    49  0000                     _TRISAbits	set	3975
    50                           
    51                           ; #config settings
    52  0000                     
    53                           	psect	cinit
    54  01FFAC                     __pcinit:
    55                           	opt callstack 0
    56  01FFAC                     start_initialization:
    57                           	opt callstack 0
    58  01FFAC                     __initialization:
    59                           	opt callstack 0
    60  01FFAC                     end_of_initialization:
    61                           	opt callstack 0
    62  01FFAC                     __end_of__initialization:
    63                           	opt callstack 0
    64  01FFAC  0100               	movlb	0
    65  01FFAE  EFDF  F0FF         	goto	_main	;jump to C main() function
    66                           
    67                           	psect	cstackCOMRAM
    68  000001                     __pcstackCOMRAM:
    69                           	opt callstack 0
    70  000001                     ??_main:
    71  000001                     
    72                           ; 2 bytes @ 0x0
    73  000001                     	ds	2
    74                           
    75 ;;
    76 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    77 ;;
    78 ;; *************** function _main *****************
    79 ;; Defined at:
    80 ;;		line 14 in file "newmain.c"
    81 ;; Parameters:    Size  Location     Type
    82 ;;		None
    83 ;; Auto vars:     Size  Location     Type
    84 ;;		None
    85 ;; Return value:  Size  Location     Type
    86 ;;                  2   16[None  ] int 
    87 ;; Registers used:
    88 ;;		wreg, status,2, cstack
    89 ;; Tracked objects:
    90 ;;		On entry : 0/0
    91 ;;		On exit  : 0/0
    92 ;;		Unchanged: 0/0
    93 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
    94 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
    95 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
    96 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
    97 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
    98 ;;Total ram usage:        2 bytes
    99 ;; Hardware stack levels required when called:    1
   100 ;; This function calls:
   101 ;;		_oscilador
   102 ;; This function is called by:
   103 ;;		Startup code after reset
   104 ;; This function uses a non-reentrant model
   105 ;;
   106                           
   107                           	psect	text0
   108  01FFBE                     __ptext0:
   109                           	opt callstack 0
   110  01FFBE                     _main:
   111                           	opt callstack 30
   112  01FFBE                     
   113                           ;newmain.c: 15:     oscilador();
   114  01FFBE  ECD9  F0FF         	call	_oscilador	;wreg free
   115  01FFC2                     
   116                           ;newmain.c: 16:     TRISAbits.TRISA0 = 0;
   117  01FFC2  9087               	bcf	135,0,c	;volatile
   118  01FFC4                     
   119                           ;newmain.c: 17:     ANSELAbits.ANSELA0 = 0;
   120  01FFC4  010F               	movlb	15	; () banked
   121  01FFC6  910C               	bcf	12,0,b	;volatile
   122  01FFC8                     l707:
   123                           
   124                           ;newmain.c: 19:         PORTAbits.RA0 = 1;
   125  01FFC8  808C               	bsf	140,0,c	;volatile
   126  01FFCA                     
   127                           ;newmain.c: 20:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   128  01FFCA  0E06               	movlw	6
   129  01FFCC  6E02               	movwf	(??_main+1)^0,c
   130  01FFCE  0E13               	movlw	19
   131  01FFD0  6E01               	movwf	??_main^0,c
   132  01FFD2  0EAE               	movlw	174
   133  01FFD4                     u17:
   134  01FFD4  2EE8               	decfsz	wreg,f,c
   135  01FFD6  D7FE               	bra	u17
   136  01FFD8  2E01               	decfsz	??_main^0,f,c
   137  01FFDA  D7FC               	bra	u17
   138  01FFDC  2E02               	decfsz	(??_main+1)^0,f,c
   139  01FFDE  D7FA               	bra	u17
   140  01FFE0                     
   141                           ;newmain.c: 21:         PORTAbits.RA0 = 0;
   142  01FFE0  908C               	bcf	140,0,c	;volatile
   143  01FFE2                     
   144                           ;newmain.c: 22:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   145  01FFE2  0E06               	movlw	6
   146  01FFE4  6E02               	movwf	(??_main+1)^0,c
   147  01FFE6  0E13               	movlw	19
   148  01FFE8  6E01               	movwf	??_main^0,c
   149  01FFEA  0EAE               	movlw	174
   150  01FFEC                     u27:
   151  01FFEC  2EE8               	decfsz	wreg,f,c
   152  01FFEE  D7FE               	bra	u27
   153  01FFF0  2E01               	decfsz	??_main^0,f,c
   154  01FFF2  D7FC               	bra	u27
   155  01FFF4  2E02               	decfsz	(??_main+1)^0,f,c
   156  01FFF6  D7FA               	bra	u27
   157  01FFF8  EFE4  F0FF         	goto	l707
   158  01FFFC  EF00  F000         	goto	start
   159  020000                     __end_of_main:
   160                           	opt callstack 0
   161                           
   162 ;; *************** function _oscilador *****************
   163 ;; Defined at:
   164 ;;		line 28 in file "newmain.c"
   165 ;; Parameters:    Size  Location     Type
   166 ;;		None
   167 ;; Auto vars:     Size  Location     Type
   168 ;;		None
   169 ;; Return value:  Size  Location     Type
   170 ;;                  1    wreg      void 
   171 ;; Registers used:
   172 ;;		wreg, status,2
   173 ;; Tracked objects:
   174 ;;		On entry : 0/0
   175 ;;		On exit  : 0/0
   176 ;;		Unchanged: 0/0
   177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
   178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   182 ;;Total ram usage:        0 bytes
   183 ;; Hardware stack levels used:    1
   184 ;; This function calls:
   185 ;;		Nothing
   186 ;; This function is called by:
   187 ;;		_main
   188 ;; This function uses a non-reentrant model
   189 ;;
   190                           
   191                           	psect	text1
   192  01FFB2                     __ptext1:
   193                           	opt callstack 0
   194  01FFB2                     _oscilador:
   195                           	opt callstack 30
   196  01FFB2                     
   197                           ;newmain.c: 29:     OSCCON1bits.NOSC = 0b111;
   198  01FFB2  0E70               	movlw	112
   199  01FFB4  010E               	movlb	14	; () banked
   200  01FFB6  13D3               	iorwf	211,f,b	;volatile
   201                           
   202                           ;newmain.c: 30:     OSCCON1bits.NDIV = 0;
   203  01FFB8  0EF0               	movlw	-16
   204  01FFBA  17D3               	andwf	211,f,b	;volatile
   205  01FFBC                     
   206                           ; BSR set to: 14
   207  01FFBC  0012               	return		;funcret
   208  01FFBE                     __end_of_oscilador:
   209                           	opt callstack 0
   210  0000                     
   211                           	psect	rparam
   212  0000                     tosu	equ	0xFFF
   213                           tosh	equ	0xFFE
   214                           tosl	equ	0xFFD
   215                           stkptr	equ	0xFFC
   216                           pclatu	equ	0xFFB
   217                           pclath	equ	0xFFA
   218                           pcl	equ	0xFF9
   219                           tblptru	equ	0xFF8
   220                           tblptrh	equ	0xFF7
   221                           tblptrl	equ	0xFF6
   222                           tablat	equ	0xFF5
   223                           prodh	equ	0xFF4
   224                           prodl	equ	0xFF3
   225                           indf0	equ	0xFEF
   226                           postinc0	equ	0xFEE
   227                           postdec0	equ	0xFED
   228                           preinc0	equ	0xFEC
   229                           plusw0	equ	0xFEB
   230                           fsr0h	equ	0xFEA
   231                           fsr0l	equ	0xFE9
   232                           wreg	equ	0xFE8
   233                           indf1	equ	0xFE7
   234                           postinc1	equ	0xFE6
   235                           postdec1	equ	0xFE5
   236                           preinc1	equ	0xFE4
   237                           plusw1	equ	0xFE3
   238                           fsr1h	equ	0xFE2
   239                           fsr1l	equ	0xFE1
   240                           bsr	equ	0xFE0
   241                           indf2	equ	0xFDF
   242                           postinc2	equ	0xFDE
   243                           postdec2	equ	0xFDD
   244                           preinc2	equ	0xFDC
   245                           plusw2	equ	0xFDB
   246                           fsr2h	equ	0xFDA
   247                           fsr2l	equ	0xFD9
   248                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       2
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK14           31      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
                          _oscilador
 ---------------------------------------------------------------------------------
 (1) _oscilador                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _oscilador

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      2       2       1        2.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
ABS                  0      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK14           1F      0       0      31        0.0%
BANK14              1F      0       0      32        0.0%
BIGRAM_1            1F      0       0      33        0.0%
BIGRAM             CFF      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Mar 22 00:55:48 2021

            __CFG_CP$OFF 000000                       l23 FFBC                       u17 FFD4  
                     u27 FFEC              __CFG_LVP$ON 000000                      l701 FFBE  
                    l711 FFE0                      l703 FFC2                      l713 FFE2  
                    l705 FFC4                      l707 FFC8                      l709 FFCA  
                    l699 FFB2             __CFG_CPD$OFF 000000                      wreg 000FE8  
           __CFG_ZCD$OFF 000000            __CFG_FCMEN$ON 000000                     _main FFBE  
                   start 0000            __CFG_CSWEN$ON 000000             ___param_bank 000000  
          __CFG_SCANE$ON 000000                    ?_main 0001            __CFG_WDTE$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000            __CFG_PWRTE$ON 000000            __CFG_WRT4$OFF 000000  
          __CFG_WRT5$OFF 000000            __CFG_WRT6$OFF 000000            __CFG_WRT7$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000           __CFG_EBTR4$OFF 000000           __CFG_EBTR5$OFF 000000  
         __CFG_EBTR6$OFF 000000           __CFG_EBTR7$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
     __CFG_MCLRE$EXTMCLR 000000          __initialization FFAC             __end_of_main 0000  
                 ??_main 0001            __activetblptr 000000           __CFG_WDTCCS$SC 000000  
     __CFG_RSTOSC$EXTOSC 000000           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
             __accesstop 0060  __end_of__initialization FFAC          __CFG_FEXTOSC$XT 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001          __CFG_PPS1WAY$ON 000000  
     __size_of_oscilador 000C                  __Hparam 0000                  __Lparam 0000  
                __pcinit FFAC                  __ramtop 0F00                  __ptext0 FFBE  
                __ptext1 FFB2     end_of_initialization FFAC        __end_of_oscilador FFBE  
  __CFG_WDTCPS$WDTCPS_31 000000                _PORTAbits 000F8C                _TRISAbits 000F87  
    start_initialization FFAC         __CFG_LPBOREN$OFF 000000                _oscilador FFB2  
               __Hrparam 0000               ?_oscilador 0001                 __Lrparam 0000  
     __CFG_BOREN$SBORDIS 000000               _ANSELAbits 000F0C              _OSCCON1bits 000ED3  
          __size_of_main 0042     __CFG_WDTCWS$WDTCWS_7 000000       __CFG_BORV$VBOR_190 000000  
      __CFG_CLKOUTEN$OFF 000000              ??_oscilador 0001  
